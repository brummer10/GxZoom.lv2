
// D237A table generated by DK/diode_table_gen.py -- do not modify manually

struct table1d { // 1-dimensional function table
    float low;
    float high;
    float istep;
    int size;
    float data[];
};

template <int tab_size>
struct table1d_imp {
    float low;
    float high;
    float istep;
    int size;
    float data[tab_size];
    operator table1d&() const { return *(table1d*)this; }
};

static table1d_imp<100> diode_table __rt_data = {
	0.0,0.769,85,100, {
	0.0,0.0121212121186,0.0242424242367,0.0363636363539,0.0484848484695,
	0.0606060605826,0.0727272726918,0.0848484847951,0.0969696968895,0.109090908971,
	0.121212121032,0.133333333064,0.14545454505,0.15757575697,0.16969696879,
	0.18181818046,0.193939391905,0.206060603013,0.218181813617,0.230303023465,
	0.242424232183,0.254545439205,0.266666643688,0.27878784437,0.290909039355,
	0.30303022581,0.315151399485,0.327272554021,0.339393679887,0.351514762811,
	0.363635781413,0.375756703675,0.387877481636,0.399998043468,0.412118281596,
	0.424238034927,0.436357062242,0.448475002416,0.460591314938,0.472705191115,
	0.484815421692,0.496920199963,0.50901683001,0.521101296615,0.533167636457,
	0.545207029959,0.557206514195,0.569147211122,0.581001998642,0.592732673816,
	0.604286940639,0.615596059655,0.626574656612,0.637124610993,0.647144354006,
	0.656542689704,0.665253183962,0.67324370555,0.680517721992,0.687108103962,
	0.693067152107,0.698456698332,0.703340488971,0.707779347146,0.711828650425,
	0.715537389427,0.718948160866,0.722097639356,0.725017246413,0.72773385945,
	0.730270481944,0.732646841143,0.734879904137,0.736984315099,0.738972761752,
	0.740856280756,0.742644511542,0.744345907218,0.745967910003,0.747517097456,
	0.748999304686,0.750419726826,0.751783005239,0.75309330031,0.754354353128,
	0.755569537958,0.75674190703,0.757874228923,0.75896902156,0.760028580684,
	0.761055004514,0.762050215155,0.763015977257,0.763953914329,0.764865523033,
	0.765752185762,0.766615181714,0.767455696701,0.768274831826,0.769073611203
	}
};

double always_inline diodeclip(double x) {
    double f = fabs(x);
    f = f * diode_table.istep;
    int i = static_cast<int>(f);
    if (i < 0) {
        f = diode_table.data[0];
    } else if (i >= diode_table.size-1) {
        f = diode_table.data[diode_table.size-1];
    } else {
	f -= i;
	f = diode_table.data[i]*(1-f) + diode_table.data[i+1]*f;
    }
    return copysign(f, x);
}

